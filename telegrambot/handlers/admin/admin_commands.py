from aiogram import Router, F, types
from aiogram.filters import Command
from telegrambot.markups.reply_markups import get_catalog_kb
from telegrambot.filters import user_rights
from aiogram.enums.content_type import ContentType
import sqlite3

router = Router()
router.message.filter(user_rights.UserRightFilter())


@router.message(Command('start'))
async def cmd_start(message: types.Message):
    await message.answer('''üëã–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!
–Ø –±–æ—Ç-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –∑–¥–µ—Å—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–∞–∑–Ω—ã—Ö –∫–Ω–∏–≥ IT —Ç–µ–º–∞—Ç–∏–∫–∏.
–¢—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É üìö–ö–∞—Ç–∞–ª–æ–≥, –Ω–∞—Ö–æ–¥—è—â—É—é—Å—è –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –∫–Ω–∏–≥–∏ –Ω–∞ —Å–≤–æ—ë–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ ‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ''',
                         reply_markup=get_catalog_kb())


@router.message(F.content_type == ContentType.DOCUMENT)
async def load_doc(message: types.Message):
    book_id = message.document.file_id
    book_name = message.document.file_name
    book_type, book_caption = message.caption.split('\n', 1)

    if book_type is None:
        await message.answer(
            "–ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—è, –∫ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –æ—Ç–Ω–µ—Å—Ç–∏ –∫–Ω–∏–≥–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä: C++, SQL, Computer Science –∏ —Ç.–ø.")
    else:
        with sqlite3.connect("database.db") as connect:
            connect.row_factory = sqlite3.Row
            cursor = connect.cursor()
            cursor.execute(
                f"""INSERT INTO Books (id_book, book_name, type, caption) VALUES ('{book_id}', '{book_name}', '{book_type}', '{book_caption}');""")


@router.message(F.photo)
async def get_photo_id(message: types.Message):
    await message.answer(message.photo[-1].file_id)
